{
  "name": "@rootstream/monologue",
  "version": "1.0.0",
  "description": "serverless system-to-system messaging and RPC based on AWS Lambda, API Gateway, and SQS",
  "main": "index.js",
  "scripts": {
    "build": "sam build",
    "package": "sam package --output-template-file packaged.yaml --s3-bucket rootstream",
    "deploy": "sam deploy --template-file packaged.yaml --stack-name $STACK --capabilities CAPABILITY_IAM",
    "describe": "aws cloudformation describe-stacks --stack-name $STACK --query 'Stacks[].Outputs'",
    "describe:output": "aws cloudformation describe-stacks --stack-name $STACK --output text --query \"Stacks[].Outputs[?OutputKey==\\`$KEY\\`].OutputValue\"",
    "configure": "npm-run-all configure:header configure:endpoint configure:apiKey",
    "configure:header": "echo '[opts]' > .monologuerc",
    "configure:endpoint": "echo endpoint=$(KEY=WebSocketURI npm run --silent describe:output) >> .monologuerc",
    "configure:apiKey": "echo apiKey=$(aws apigateway get-api-key --output text --query value --include-value --api-key `KEY=ApiKeyID npm run --silent describe:output`) >> .monologuerc",
    "undeploy": "aws cloudformation delete-stack --stack-name $STACK",
    "undeploy:prod": "STACK=monologue npm run undeploy",
    "undeploy:test": "STACK=monologue-test npm run undeploy",
    "redeploy": "npm-run-all clean build package deploy describe configure",
    "redeploy:prod": "STACK=monologue npm run redeploy",
    "redeploy:test": "STACK=monologue-test npm run redeploy",
    "clean": "git clean -xdf -e node_modules && rm -rf .aws-sam",
    "test": "nyc mocha"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rootstream/monologue.git"
  },
  "author": "Sepehr Laal",
  "license": "UNLICENSED",
  "bugs": {
    "url": "https://github.com/rootstream/monologue/issues"
  },
  "homepage": "https://github.com/rootstream/monologue#readme",
  "dependencies": {
    "@rootstream/once": "^1.0.0",
    "bluebird": "^3.5.5",
    "debug": "^4.1.1",
    "eventemitter2": "^5.0.1",
    "lodash": "^4.17.15",
    "rc": "^1.2.8",
    "uniqid": "^5.0.3",
    "wrappy": "^1.0.2",
    "ws": "^7.1.2"
  },
  "devDependencies": {
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "eslint": "^6.4.0",
    "eslint-config-prettier": "^6.3.0",
    "eslint-plugin-prettier": "^3.1.1",
    "mocha": "^6.2.0",
    "npm-run-all": "^4.1.5",
    "nyc": "^14.1.1",
    "prettier": "^1.18.2",
    "sinon": "^7.5.0"
  },
  "nyc": {
    "reporter": [
      "text-summary",
      "html"
    ],
    "cache": false,
    "instrument": true
  },
  "prettier": {
    "printWidth": 120,
    "tabWidth": 2,
    "singleQuote": true,
    "jsxBracketSameLine": true,
    "trailingComma": "es5"
  },
  "eslintConfig": {
    "env": {
      "es6": true,
      "node": true,
      "mocha": true
    },
    "extends": [
      "plugin:prettier/recommended"
    ],
    "parserOptions": {
      "ecmaVersion": 2018,
      "ecmaFeatures": {
        "legacyDecorators": true
      }
    },
    "rules": {
      "semi": "error",
      "strict": [
        "error",
        "global"
      ],
      "max-len": [
        "error",
        {
          "code": 120,
          "ignoreUrls": true
        }
      ]
    }
  }
}
